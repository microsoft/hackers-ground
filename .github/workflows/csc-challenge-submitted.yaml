name: On Challenge Submitted

on:
  issues:
    types:
    - opened
  workflow_dispatch:
    inputs:
      issue-number:
        description: 'Issue number'
        required: true

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  verification-start:
    name: 'Starting verification'

    runs-on: ubuntu-latest

    steps:
    # - name: Check event payload
    #   shell: pwsh
    #   run: |
    #     $eventPayload = ${{ toJson(github) }}

    - name: Check issue details
      id: issue
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        if ("${{ github.event_name}}" -eq "workflow_dispatch") {
          echo "number=${{ github.event.inputs.issue-number }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8

          $issue = $(gh api /repos/${{ github.repository }}/issues/${{ github.event.inputs.issue-number }} | ConvertFrom-Json)
          echo "title=$($issue.title)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

          $body = $($issue.body) | ConvertTo-Json -Compress
          echo "body=$body" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

          $created_at=$($issue.created_at.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz"))
          echo "created_at=$created_at" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

          echo "githubId=$($issue.user.login)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
          echo "assignee=$($issue.assignee)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        } else {
          echo "number=${{ github.event.issue.number }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8

          echo "title=$('${{ github.event.issue.title }}')" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

          $body = $("${{ github.event.issue.body }}") | ConvertTo-Json -Compress
          echo "body=$body" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

          echo "created_at=$('${{ github.event.issue.created_at }}')" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
          echo "githubId=$('${{ github.event.issue.user.login }}')" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
          echo "assignee=$('${{ github.event.issue.assignee }}')" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        }

    - name: Check issue date/time
      id: checkpoint
      shell: pwsh
      run: |
        $tz = [TimeZoneInfo]::FindSystemTimeZoneById("Asia/Seoul")
        $dateSubmitted = [DateTimeOffset]::Parse("${{ steps.issue.outputs.created_at }}")
        $offset = $tz.GetUtcOffset($dateSubmitted)

        $dateSubmitted = $dateSubmitted.ToOffset($offset)
        $dateDue = $([DateTimeOffset]::Parse("${{ vars.CSC_DUE_DATE }}"))
        $isOverdue = "$($dateSubmitted -gt $dateDue)".ToLowerInvariant()

        $dateSubmittedValue = $dateSubmitted.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz")
        $dateDueValue = $dateDue.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz")

        echo "dateSubmitted=$dateSubmittedValue" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "dateDue=$dateDueValue" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isOverdue=$isOverdue" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Check challenge code
      id: challenge
      shell: pwsh
      run: |
        $title = "${{ steps.issue.outputs.title }}"
        $code = $title.Contains("]") ? $title.Substring(0, $title.IndexOf(']')).Replace("[", "").Replace("]", "").Trim().ToLowerInvariant() : ""
        $codeUpper = ($code -ne "") ? $code.ToUpperInvariant() : ""
        $codes = @("az-900", "ai-900", "dp-900", "pl-900", "sc-900", "ms-900")
        $isValidCode = ($code -ne "") ? $($codes.Contains($code)).ToString().ToLowerInvariant() : $false

        echo "code=$code" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "codeUpper=$codeUpper" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isValidCode=$isValidCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Extract Microsoft Learn profile link
      id: profile
      shell: pwsh
      run: |
        $scriptUrl = "https://raw.githubusercontent.com/hackersground-kr/operations/main/get-learnprofile/Get-LearnProfile.ps1"
        Invoke-RestMethod $scriptUrl | Out-File ~/Get-LearnProfile.ps1

        $profileLink = $(~/Get-LearnProfile.ps1 -Text ${{ steps.issue.outputs.body }})

        echo "link=$profileLink" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Add a label - Overdue
      if: ${{ steps.checkpoint.outputs.isOverdue == 'true' }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "overdue" \
          -R ${{ github.event.repository.full_name }}

    - name: Comment to issue - Overdue
      if: ${{ steps.checkpoint.outputs.isOverdue == 'true' }}
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          * 이슈 제출 시각: ${{ steps.checkpoint.outputs.dateSubmitted }}
          * 이슈 마감 시각: ${{ steps.checkpoint.outputs.dateDue }}

          안타깝게도 제출하신 이슈는 마감 기한인 ${{ steps.checkpoint.outputs.dateDue }}을 넘기셨습니다. 😭 따라서, 이번 클라우드 스킬 챌린지 이벤트에 반영되지 않습니다.

          그동안 클라우드 스킬 챌린지 이벤트에 참여해 주셔서 감사 드립니다. 하지만 우리는 해커톤이 있잖아요? 거기서 다시 만나요!

    - name: Close issue - Overdue
      if: ${{ steps.checkpoint.outputs.isOverdue == 'true' }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue close ${{ steps.issue.outputs.number }} \
          -c "챌린지 제출 기한이 종료되었습니다. 이슈를 닫습니다." \
          -R ${{ github.event.repository.full_name }}

    - name: Add a label - Invalid challenge code
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false' }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "invalid" \
          -R ${{ github.event.repository.full_name }}
  
    - name: Comment to issue - Invalid challenge code
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false' }}
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          * 제출 챌린지 코드: `${{ steps.challenge.outputs.codeUpper }}`
          * 예상 챌린지 코드: `AZ-900`, `AI-900`, `DP-900`, `PL-900`, `SC-900`, `MS-900`

          안타깝게도 제출하신 이슈는 정확한 챌린지 코드가 제목에 포함되어 있지 않아 확인을 할 수가 없습니다. 😱 챌린지 코드는 위에 언급한 여섯 가지 중 하나여야 합니다.

          이 이슈는 자동으로 닫힐 예정이니, 새롭게 이슈를 생성해 주시기 바랍니다.
  
    - name: Close issue - Invalid challenge code
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false' }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue close ${{ steps.issue.outputs.number }} \
          -c "챌린지 코드를 확인할 수 없습니다. 이슈를 닫습니다." \
          -R ${{ github.event.repository.full_name }}
  
    - name: Add a label - Acknowledge
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "csc,${{ steps.challenge.outputs.code }},verifying" \
          -R ${{ github.event.repository.full_name }}

    - name: Get random assignee
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' && steps.issue.outputs.assignee == '' }}
      id: assignee
      shell: pwsh
      run: |
        $scriptUrl = "https://raw.githubusercontent.com/hackersground-kr/operations/main/get-randomassignee/Get-RandomAssignee.ps1"
        Invoke-RestMethod $scriptUrl | Out-File ~/Get-RandomAssignee.ps1
        $assignee = $(~/Get-RandomAssignee.ps1 -Assignees "${{ secrets.INSPECTORS }}")

        echo "githubId=$assignee" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Assign an inspector
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' && steps.issue.outputs.assignee == '' }}
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'add-assignees'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        assignees: ${{ steps.assignee.outputs.githubId }}

    - name: Comment to issue - Acknowledge
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' }}
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        emoji: '+1,rocket'
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          ${{ steps.challenge.outputs.codeUpper }} 챌린지 완료 이슈를 생성해 주셔서 감사합니다! 🎉 참가자님의 해커톤 완주를 응원해요! 💪🏼

          @${{ steps.assignee.outputs.githubId }} 님께서 최대한 빠르게 확인해 드리겠습니다! 😊

          🔹 해커그라운드 운영진 일동 🔹

    - name: Call Power Automate workflow
      if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' }}
      id: request
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.PAU_ON_CHALLENGE_SUBMITTED_URL }}
        method: 'POST'
        data: '{ "githubId": "${{ steps.issue.outputs.githubId }}", "msLearnProfileLink": "${{ steps.profile.outputs.link }}", "challengeCode": "${{ steps.challenge.outputs.codeUpper }}" }'

    # - name: Check the response from Power Automate workflow
    #   if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' }}
    #   id: response
    #   run: |
    #     echo "statusCode=${{ fromJson(steps.request.outputs.response).statusCode }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    # - name: Comment to issue - Power Automate workflow
    #   if: ${{ steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' && steps.response.outputs.statusCode == '400' }}
    #   uses: actions-cool/issues-helper@v3
    #   with:
    #     actions: 'create-comment'
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     issue-number: ${{ steps.issue.outputs.number }}
    #     emoji: '+1,eyes,confused'
    #     body: |
    #       🚨 @${{ steps.issue.outputs.githubId }} 님!

    #       현재 @${{ steps.issue.outputs.githubId }}님의 GitHub ID를 시스템에서 확인할 수 없습니다. 😱

    #       저희 해커그라운드 조직위원회로 빠른 연락 부탁 드립니다. 🙏🏼
